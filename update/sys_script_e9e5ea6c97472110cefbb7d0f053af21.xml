<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_58872_needit_needit">u_need_suggestion_forVALCHANGES^EQ<item endquery="false" field="u_need_suggestion_for" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Chatgpt Query</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    // Add your code here
	var needitScriptIncClass = new sendingEmail42();
var restService = 'ChatGPTService';
var restMethod = 'ChatGPT_Post';
var requestor = current.u_need_suggestion_for;


	
    try {
//         var r = new sn_ws.RESTMessageV2('ChatGPTService', 'ChatGPT_Post');
//         r.setStringParameterNoEscape('temp', '0.7');
//         r.setStringParameterNoEscape('Question', current.u_need_suggestion_for);
//         r.setStringParameterNoEscape('model', 'gpt-3.5-turbo');

//         var response = r.execute();
//         var responseBody = response.getBody();
//         var httpStatus = response.getStatusCode();

//         var responseObj = JSON.parse(responseBody);
//         var test = responseObj.choices[0].message.content;
		var test = needitScriptIncClass.getChatGPTResponse(restService, restMethod, requestor);
        current.u_chatgpt_query_response = test;
        gs.info("Test : " + current.u_chatgpt_query_response);
        current.setWorkflow(false);
        current.update();
        current.setWorkflow(true);
    } catch (ex) {
        var message = ex.message;
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-05-23 16:36:58</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e9e5ea6c97472110cefbb7d0f053af21</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>Chatgpt Query</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_e9e5ea6c97472110cefbb7d0f053af21</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-05-23 17:23:39</sys_updated_on>
        <template/>
        <when>async_always</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=e9e5ea6c97472110cefbb7d0f053af21"/>
</record_update>
